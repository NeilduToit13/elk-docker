version: '3.6'

networks:
  elk:
    driver: bridge

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG}
    container_name: elasticsearch
    ports: ['9200:9200']
    networks: ['elk']
    volumes:
      - './es_data:/usr/share/elasticsearch/data'
      - './config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml'
    environment:
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG}
    container_name: kibana
    ports: ['5601:5601']
    networks: ['elk']
    depends_on: ['elasticsearch']
    volumes:
      - './config/kibana.yml:/usr/share/kibana/config/kibana.yml'
    healthcheck:
      test: curl -s http://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  logstash:
    image: docker.elastic.co/logstash/logstash:${TAG}
    container_name: logstash
    volumes:
      - './config/logstash.yml:/usr/share/logstash/config/logstash.yml'
      - './config/logstash-pipelines:/usr/share/logstash/pipelines'
    networks: ['elk']
    depends_on: ['elasticsearch']
    healthcheck:
      test: bin/logstash -t
      interval: 60s
      timeout: 50s
      retries: 5
    restart: always

  apmserver:
    image: docker.elastic.co/apm/apm-server:${TAG}
    container_name: apm_server
    ports: ['8200:8200']
    networks: ['elk']
    command: --strict.perms=false -e  # -e flag to log to stderr and disable syslog/file output
    volumes:
      - './config/apm-server.yml:/usr/share/apm-server/apm-server.yml'
    depends_on: ['elasticsearch', 'kibana']
    healthcheck:
      test: curl http://localhost:8200/healthcheck >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
